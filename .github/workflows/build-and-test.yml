name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build-and-lint:
    name: Build app and run linters
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up our JDK environment
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '19'

      - name: Decode Keystore & Setup local.properties
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/app.jks
          echo "RELEASE_STORE_FILE=${TMP_KEYSTORE_FILE_PATH}/app.jks" >> local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.SIGNING_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> local.properties

      - name: Build with Gradle
        run: ./gradlew clean build

#      - name: Run detekt Linter
#        run: ./gradlew detekt
#
#      - name: Run Kotlin Linter
#        run: ./gradlew ktlintCheck
#
#      - name: Run Android Linter
#        run: ./gradlew lint
#
#      - name: Run Spotless
#        run: ./gradlew spotlessCheck

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build-and-lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up our JDK environment
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '19'

      - name: Decode Keystore & Setup local.properties
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/app.jks
          echo "RELEASE_STORE_FILE=${TMP_KEYSTORE_FILE_PATH}/app.jks" >> local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.SIGNING_STORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> local.properties

      - name: Build Debug and Test APKs
        run: ./gradlew assembleDebug assembleAndroidTest

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Upload debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload debug test APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  instrumented-tests:
    name: Run UI tests with Firebase Test Lab
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Android debug APK
        uses: actions/download-artifact@v3
        with:
          name: app-debug-androidTest

      - name: Download Android debug test APK
        uses: actions/download-artifact@v3
        with:
          name: app-debug

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Set current project
        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=pl,orientation=portrait
